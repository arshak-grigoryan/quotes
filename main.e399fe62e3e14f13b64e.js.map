{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/API/searchQuotes.js","webpack:///./js/model/index.js","webpack:///./js/constants.js","webpack:///./js/view/utils.js","webpack:///./js/view/index.js","webpack:///./js/presenter.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","QUOTES","AUTHORS","GENRES","API","loadData","SearchData","this","fetch","res","json","cb","responseCount","Array","fill","map","str","nameLetters","trim","split","toUpperCase","join","includes","nstr","toLowerCase","author","authorQuotes","forEach","q","genre","quote","getGenre","getQuotesByGenre","getAuthor","getQuotesByAuthor","getQuotesByPhrase","searchValue","Model","quotes","getSomeRandomQuotes","getRandomQuote","then","changeQuotes","onQuotesChange","searchData","isArray","nres","arr","check","createEL","tag","parentEl","className","attributes","content","el","classList","add","textContent","createQuoteCard","quoteText","quoteAuthor","quoteWrapper","quoteElement","View","app","getElementById","renderedQuotesCount","searchWrapper","searchElement","searchForm","addEventListener","keyCode","onSearchQuotes","preventDefault","getElementsByClassName","randomQuotes","elNothingFound","remove","randomAllQuotes","querySelectorAll","children","text","newQuote","updateExicestedQuotes","innerText","elDiv","model","view","bindOnQuotesChange","onQuotesChangee","bindonSearchQuotes","init","createSearch","createRandomQuotes","displayRandomQuotes","getQuotes","displaySearchResult","displayNothingFound"],"mappings":"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","file":"main.e399fe62e3e14f13b64e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".\" + \"e399fe62e3e14f13b64e\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([121,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","let QUOTES, AUTHORS, GENRES\r\n\r\nasync function loadData () {\r\n    QUOTES = (await import('./data/quotes')).QUOTES\r\n    AUTHORS = (await import('./data/authors')).AUTHORS\r\n    GENRES = (await import('./data/genres')).GENRES\r\n}\r\n\r\nloadData()\r\n\r\nlet API\r\nexport default class SearchData {\r\n    constructor () {\r\n        if (API instanceof SearchData) { return API}\r\n        else {return this}\r\n    }\r\n\r\n    async getRandomQuote() {\r\n        try {\r\n            const res = await fetch(\r\n            \"https://quote-garden.herokuapp.com/api/v3/quotes/random\"\r\n            );\r\n            const json = await res.json();\r\n            return json.data[0];\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    \r\n    async getSomeRandomQuotes(cb, responseCount) {\r\n        try {\r\n            const res = await Promise.all(\r\n            new Array(responseCount).fill(null).map(() => cb())\r\n            );\r\n            return res;\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    getAuthor (str) {\r\n        let nameLetters = str.trim().split('')\r\n        for (let i = 0; i<nameLetters.length; i++) {\r\n            if(\r\n                nameLetters[i-1] === undefined || \r\n                nameLetters[i-1] === \" \" || \r\n                nameLetters[i-1] === \"-\"\r\n            ) {\r\n                if(\r\n                    !(nameLetters[i] === 'd' && nameLetters[i+1] === 'a' || \r\n                    nameLetters[i] === 'd' && nameLetters[i+1] === 'e' || \r\n                    nameLetters[i] === 'l' && nameLetters[i+1] === 'a')\r\n                ) {\r\n                    nameLetters[i] = nameLetters[i].toUpperCase()\r\n\r\n                }\r\n            }\r\n        }\r\n        const name = nameLetters.join(\"\")\r\n        for (let i = 0; i < AUTHORS.length; i++) {\r\n            if(AUTHORS[i].includes(name)) {\r\n                return AUTHORS[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    getGenre (str) {\r\n        let nstr = str.trim().toLowerCase()\r\n        for (let i = 0; i < GENRES.length; i++) {\r\n            if(GENRES[i].includes(nstr)) {\r\n                return GENRES[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    getQuotesByAuthor (author) {\r\n        const authorQuotes = []\r\n        QUOTES.forEach(q => {\r\n            if(q.author === author) {\r\n                authorQuotes.push(q)\r\n            }\r\n        })\r\n        return authorQuotes\r\n    }\r\n\r\n    getQuotesByGenre (genre) {\r\n        const authorQuotes = []\r\n        QUOTES.forEach(q => {\r\n            if(q.genre === genre) {\r\n                authorQuotes.push(q)\r\n            }\r\n        })\r\n        return authorQuotes\r\n    }\r\n\r\n    getQuotesByPhrase (str) {\r\n        let nstr = str.trim().toLowerCase()\r\n        let res = []\r\n        QUOTES.forEach(quote => {\r\n            if(quote[\"text\"]){\r\n                if(quote[\"text\"].includes(nstr)) {\r\n                    res.push(quote)\r\n                }\r\n            }\r\n        })\r\n        return res\r\n    }\r\n\r\n    searchData (str) {\r\n        if ( this.getGenre(str) ) {\r\n            return this.getQuotesByGenre(this.getGenre(str))\r\n        }\r\n        else if( this.getAuthor(str) ) {\r\n            return this.getQuotesByAuthor(this.getAuthor(str))\r\n        } \r\n        else if( this.getQuotesByPhrase(str).length !== 0 ) {\r\n            return this.getQuotesByPhrase(str)\r\n        }\r\n        else {\r\n            return {searchValue:str, result:null}\r\n        }\r\n    }\r\n    \r\n    // foo() {\r\n    //     const authors = {}\r\n    //     const genres = new Set()\r\n    //     const quotes = new Set()\r\n    //     // take top 100 authors\r\n    //     for(let i = 100; i > 0; i--) {\r\n    //         authors[this.AUTHORS[i]] = {}\r\n    //     }\r\n    //     this.QUOTES.forEach(({author, genre='general', text}) => {\r\n    //         // skip quote if auth is not taken\r\n    //         if (!authors[author]) {\r\n    //             return;\r\n    //         }\r\n    //         const authorU = authors[author]\r\n    //         // create author genre if it’s not created\r\n    //         if (!authorU[genre]) {\r\n    //             genres.add(genre)\r\n    //             authorU[genre] = new Set()\r\n    //         }\r\n    //         if (authorU[genre].size <= 15) {\r\n    //             authorU[genre].add(text)\r\n    //             quotes.add(text);\r\n    //         }\r\n    //     });\r\n    //     window.authors = Object.keys(authors);\r\n    //     window.genres = [...genres];\r\n    //     window.quotes = [...quotes];\r\n    //     window.quotesByGeneresByAuthor = authors;\r\n        \r\n    //     console.log(genres)\r\n    //   }\r\n}\r\n\r\nAPI = new SearchData()\r\n\r\nexport { API }\r\n","import { API } from '../API/searchQuotes'\r\nimport { RANDOM_QUOTES_COUNT } from '../constants';\r\n\r\nfunction check(arr, str) {\r\n  for (const quote of arr) {\r\n    if(quote[\"text\"] === str) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport default class Model {\r\n  constructor() {\r\n    this.quotes = [];\r\n  }\r\n\r\n  init() {\r\n    API.getSomeRandomQuotes(API.getRandomQuote, RANDOM_QUOTES_COUNT).then(quotes => this.changeQuotes(quotes));\r\n  }\r\n  \r\n  changeQuotes(quotes) {\r\n    this.quotes = quotes;\r\n    this.onQuotesChange(this.quotes);\r\n  }\r\n\r\n  bindOnQuotesChange(cb) {\r\n    this.onQuotesChange = cb;\r\n  }\r\n  \r\n  getQuotes (value) {\r\n    const res = API.searchData(value)\r\n    if(Array.isArray(res)) {\r\n      let nres = []\r\n      res.forEach(quote => {\r\n        if( !(check(nres, quote[\"text\"])) ) {\r\n          nres.push(quote)\r\n        }\r\n      })\r\n      return nres      \r\n    }\r\n    return res\r\n  }\r\n  \r\n}\r\n\r\n","export const RANDOM_QUOTES_COUNT = 12","function createEL({ tag, parentEl, className, attributes, content }) {\r\n  const el = document.createElement(tag);\r\n\r\n  if (className) {\r\n    el.classList.add(className);\r\n  }\r\n  if (attributes) {\r\n    for (const name in attributes) {\r\n      el.setAttribute(name, attributes[name]);\r\n    }\r\n  }\r\n  if (content) {\r\n    el.textContent = content;\r\n  }\r\n  if (parentEl) {\r\n    parentEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\nfunction createQuoteCard({ quoteText, quoteAuthor }) {\r\n  const quoteWrapper = createEL({ tag: \"div\" });\r\n  const quoteElement = createEL({\r\n    tag: \"div\",\r\n    parentEl: quoteWrapper,\r\n    className: \"box\",\r\n  });\r\n  const quoteTextEl = createEL({\r\n    tag: \"p\",\r\n    parentEl: quoteElement,\r\n    className: \"text\",\r\n    content: quoteText,\r\n  });\r\n  const quoteAuthorEl = createEL({\r\n    tag: \"h2\",\r\n    parentEl: quoteElement,\r\n    className: \"author\",\r\n    content: quoteAuthor,\r\n  });\r\n  return quoteWrapper;\r\n}\r\n\r\nexport { createEL, createQuoteCard };\r\n","import { createEL, createQuoteCard } from './utils'\r\nimport { RANDOM_QUOTES_COUNT } from '../constants';\r\n\r\nexport default class View {\r\n  constructor() {\r\n    this.app = document.getElementById(\"app\")\r\n    this.renderedQuotesCount = RANDOM_QUOTES_COUNT\r\n  }\r\n\r\n  createRandomQuotes () {\r\n    const div = createEL({tag:'div', parentEl: this.app, className:'searchResult' })\r\n    const randomQuotes = createEL({tag:'div', parentEl:this.app, className:'quotes'})\r\n  }\r\n\r\n  createSearch () {\r\n    const searchWrapper = createEL({tag:'div', parentEl: this.app})\r\n    const searchElement = createEL({tag:'div', parentEl:searchWrapper,className: 'searchElement'})\r\n    const searchForm = createEL({tag:'form', parentEl: searchElement})\r\n    const inputText = createEL({tag:'input', parentEl: searchForm, className: 'quoteInput', attributes: {'type': 'text'}}) \r\n    inputText.addEventListener(\"keydown\", e => {\r\n      if(e.keyCode === 13) { \r\n        this.onSearchQuotes(e.target.value)\r\n        event.preventDefault()\r\n      }\r\n    })\r\n    const inputButton = createEL({tag:'input', parentEl: searchForm, className: 'quoteInput', attributes: {'type': 'button', 'value': 'search'}}) \r\n    inputButton.addEventListener('click', () => this.onSearchQuotes(document.getElementsByClassName('quoteInput')[0].value))\r\n  }\r\n\r\n  displayRandomQuotes (quotes) {\r\n    this.randomQuotes = document.getElementsByClassName('quotes')[0]\r\n    quotes.forEach(quote => {\r\n      const quoteElement = createQuoteCard(quote);\r\n        this.randomQuotes.appendChild(quoteElement)\r\n   })\r\n }\r\n\r\n updateExicestedQuotes (quotes) {\r\n  const elNothingFound = document.getElementsByClassName(\"nothingFound\")[0]\r\n  if (elNothingFound) {\r\n    elNothingFound.remove()\r\n  }\r\n  const randomAllQuotes = document.querySelectorAll('.quotes > div')\r\n  if(randomAllQuotes.length) {\r\n    if(quotes.length < this.renderedQuotesCount) {\r\n      for (let i=0; i<quotes.length; i++) {\r\n        randomAllQuotes[i].children[0].children[0].textContent = quotes[i].text\r\n        randomAllQuotes[i].children[0].children[1].textContent = quotes[i].author\r\n      }\r\n      for(let i = quotes.length; i<this.renderedQuotesCount; i++) {\r\n        randomAllQuotes[i].remove()\r\n      }\r\n      this.renderedQuotesCount = quotes.length\r\n    } else {\r\n      for (let i=0; i<this.renderedQuotesCount; i++) {\r\n        randomAllQuotes[i].children[0].children[0].textContent = quotes[i].text\r\n        randomAllQuotes[i].children[0].children[1].textContent = quotes[i].author\r\n      }\r\n      for(let i=this.renderedQuotesCount; i<quotes.length; i++){\r\n        const newQuote = createQuoteCard({quoteText:quotes[i]['text'], quoteAuthor:quotes[i]['author']})\r\n        this.randomQuotes.appendChild(newQuote)\r\n      }\r\n      this.renderedQuotesCount = quotes.length\r\n    }  \r\n  } else {\r\n    for (let i=0; i<quotes.length; i++) {\r\n      const newQuote = createQuoteCard({quoteText:quotes[i]['text'], quoteAuthor:quotes[i]['author']})\r\n      this.randomQuotes.appendChild(newQuote)\r\n    }\r\n    this.renderedQuotesCount = quotes.length\r\n  }\r\n }\r\n\r\n displaySearchResult (quotes) {\r\n  this.updateExicestedQuotes(quotes)\r\n }\r\n\r\n displayNothingFound (res) {\r\n    const randomAllQuotes = document.querySelectorAll('.quotes > div')\r\n    for (const val of randomAllQuotes) {\r\n      val.remove()\r\n    }\r\n    const elNothingFound = document.getElementsByClassName(\"nothingFound\")[0]\r\n    if( !elNothingFound ) {\r\n      const elDiv = createEL({tag:'div', parentEl:this.randomQuotes, className:'nothingFound'})\r\n      const elP = createEL({tag:'p', parentEl:elDiv, content:`Not found ${res}`})\r\n    } else {\r\n      elNothingFound.children[0].innerText = `Not found ${res}`\r\n    }\r\n}\r\n bindonSearchQuotes (cb) {\r\n  this.onSearchQuotes = cb\r\n }\r\n}","import Model from './model'\r\nimport View  from './view'\r\nimport '../css/styles'\r\n\r\nclass Presenter {\r\n  constructor(model, view) {\r\n    this.model = model;\r\n    this.view = view;\r\n\r\n    this.model.bindOnQuotesChange(quote => this.onQuotesChangee(quote))\r\n    \r\n    this.view.bindonSearchQuotes(author => this.onSearchQuotes(author))\r\n\r\n    this.model.init();\r\n  }\r\n  \r\n  onQuotesChangee (quotes){\r\n    this.view.createSearch()\r\n    this.view.createRandomQuotes()\r\n    this.view.displayRandomQuotes(quotes)\r\n  }\r\n\r\n  onSearchQuotes (value) {\r\n    Promise.resolve(this.model.getQuotes(value))\r\n      .then(res => {\r\n        if(Array.isArray(res)) {\r\n          this.view.displaySearchResult(res)\r\n        } else {\r\n          this.view.displayNothingFound(res['searchValue'])\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nconst app = new Presenter(new Model(), new View());"],"sourceRoot":""}